name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build-analyze:
    name: Perform Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=seanmbowen_cicdDemo

#      - name: Analyze code against codestyle standards
#        uses: github/super-linter/slim@v4.9.4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: target/cicdDemo-0.0.1-SNAPSHOT.jar
      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos

      - name: Prepare Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            target/cicdDemo-0.0.1-SNAPSHOT.jar

      - name: Deploy to EB
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          use_existing_version_if_available: true
          application_name: spring-boot-demo
          environment_name: Springbootdemo-env
          version_label: ${{github.SHA}}
          region: ca-central-1
          deployment_package: target/cicdDemo-0.0.1-SNAPSHOT.jar